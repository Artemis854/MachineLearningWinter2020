class numberManager {
  constructor(shuffleRate) {
    this.shuffleRate = shuffleRate;
  }

  getOne() {
    return [
      [255, 255, 0, 255, 255, 255, 255, 255, 255],
      [255, 0, 255, 255, 255, 255, 255, 255, 255],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [255, 255, 255, 255, 255, 255, 255, 255, 255],
      [255, 255, 255, 255, 255, 255, 255, 255, 255]
    ]
  }

  getTwo() {
    return [
      [255, 0, 255, 255, 255, 255, 255, 0, 0],
      [0, 255, 255, 255, 255, 255, 0, 255, 0],
      [0, 255, 255, 255, 255, 0, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [255, 0, 0, 0, 255, 255, 255, 255, 0]
    ]
  }

  getThree() {
    return [
      [255, 0, 255, 255, 255, 255, 255, 0, 255],
      [0, 255, 255, 255, 255, 255, 255, 255, 0],
      [0, 255, 255, 255, 255, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [255, 0, 0, 0, 255, 0, 0, 0, 255]
    ]
  }

  getFour() {
    return [
      [255, 255, 255, 255, 255, 0, 0, 255, 255],
      [255, 255, 255, 0, 0, 255, 0, 255, 255],
      [255, 0, 0, 255, 255, 255, 0, 255, 255],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [255, 255, 255, 255, 255, 255, 0, 255, 255]
    ]
  }

  getFive() {
    return [
      [0, 0, 0, 0, 0, 255, 255, 0, 255],
      [0, 255, 255, 0, 255, 255, 255, 255, 0],
      [0, 255, 255, 0, 255, 255, 255, 255, 0],
      [0, 255, 255, 0, 255, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 0, 0, 0, 255]
    ]
  }

  getSix() {
    return [
      [255, 0, 0, 0, 0, 0, 0, 0, 255],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [255, 0, 255, 255, 255, 0, 0, 0, 255]
    ]
  }

  getSeven() {
    return [
      [0, 255, 255, 255, 255, 255, 255, 255, 255],
      [0, 255, 255, 255, 255, 255, 0, 0, 0],
      [0, 255, 255, 255, 0, 0, 255, 255, 255],
      [0, 255, 0, 0, 255, 255, 255, 255, 255],
      [0, 0, 255, 255, 255, 255, 255, 255, 255]
    ]
  }

  getEight() {
    return [
      [255, 0, 0, 0, 255, 0, 0, 0, 255],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [255, 0, 0, 0, 255, 0, 0, 0, 255],
    ]
  }

  getNine() {
    return [
      [255, 0, 0, 0, 255, 255, 255, 0, 255],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [0, 255, 255, 255, 0, 255, 255, 255, 0],
      [255, 0, 0, 0, 0, 0, 0, 0, 255]
    ]
  }

  getZero() {
    return [
      [255, 0, 0, 0, 0, 0, 0, 0, 255],
      [0, 255, 255, 255, 255, 255, 255, 255, 0],
      [0, 255, 255, 255, 255, 255, 255, 255, 0],
      [0, 255, 255, 255, 255, 255, 255, 255, 0],
      [255, 0, 0, 0, 0, 0, 0, 0, 255]
    ]
  }

  shuffle(number) {
    for (var i = 0; i < number.length; i++) {
      for (var j = 0; j < number[i].length; j++) {
        var rand = Math.round(random(100));
        number[i][j] = rand < this.shuffleRate ? Math.abs(number[i][j] - 255) : number[i][j];
      }
    }

    return number;
  }

  getRandomNumber() {
    const number = Math.round(random(9))
    switch (number) {
      case 0:
        return this.shuffle(this.getZero())
      case 1:
        return this.shuffle(this.getOne())
      case 2:
        return this.shuffle(this.getTwo())
      case 3:
        return this.shuffle(this.getThree())
      case 4:
        return this.shuffle(this.getFour())
      case 5:
        return this.shuffle(this.getFive())
      case 6:
        return this.shuffle(this.getSix())
      case 7:
        return this.shuffle(this.getSeven())
      case 8:
        return this.shuffle(this.getEight())
      case 9:
        return this.shuffle(this.getNine())

      default:
        break;
    }
  }
}